#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# 2014 Karsten Schoeke karsten.schoeke@geobasis-bb.de

# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# Description of OIDs used from RFC 1628
# OID:     1.3.6.1.2.1.33.1.6.2.1
# Name     upsAlarmEntry!@#.iso.org.dod.internet.mgmt.mib-2.upsMIB.upsObjects.upsAlarm.upsAlarmTable.upsAlarmEntry
# Descr    "An entry containing information applicable to a
# particular alarm."

# Name     upsAlarmDescr!@#.iso.org.dod.internet.mgmt.mib-2.upsMIB.upsObjects.upsAlarm.upsAlarmTable.upsAlarmEntry.upsAlarmDescr
# OID      .1.3.6.1.2.1.33.1.6.2.1.2
# MIB      UPS-MIB
# Syntax   AutonomousType (OBJECT IDENTIFIER)
# Access   read-only
# Status   current
# DefVal  
# Indexes  upsAlarmId
# Descr    "A reference to an alarm description object.  The
# object referenced should not be accessible, but rather
# be used to provide a unique description of the alarm
# condition."

# Name     upsAlarmTime!@#.iso.org.dod.internet.mgmt.mib-2.upsMIB.upsObjects.upsAlarm.upsAlarmTable.upsAlarmEntry.upsAlarmTime
# OID      .1.3.6.1.2.1.33.1.6.2.1.3
# MIB      UPS-MIB
# Syntax   TIMESTAMP
# Access   read-only
# Status   current
# DefVal  
# Indexes  upsAlarmId
# Descr    "The value of sysUpTime when the alarm condition was
# detected.  If the alarm condition was detected at the
# time of agent startup and presumably existed before
# agent startup, the value of upsAlarmTime shall equal"

ups_alert_status = { "1" : "BatteryBad",
                     "2" : "OnBattery",
                     "3" : "LowBattery",
                     "4" : "DepletedBattery",
                     "5" : "TempBad",
                     "6" : "InputBad",
                     "7" : "OutputBad",
                     "8" : "OutputOverload",
                     "9" : "OnBypass",
                     "10" : "BypassBad",
                     "11" : "OutputOffAsRequested",
                     "12" : "UpsOffAsRequested",
                     "13" : "ChargerFailed",
                     "14" : "UpsOutputOff",
                     "15" : "UpsSystemOff",
                     "16" : "FanFailure",
                     "17" : "FuseFailure",
                     "18" : "GeneralFault",
                     "19" : "DiagnosticTestFailed",
                     "20" : "CommunicationsLost",
                     "21" : "AwaitingPower",
                     "22" : "ShutdownPending",
                     "23" : "ShutdownImminent",
                     "24" : "TestInProgress" }


def inventory_ups_alert(info):
    return [ (None, None) ]

def check_ups_alert(_no_item, _no_params, info):
    state = 0
    message = ""
    if len(info) > 1:
        #alerts present
        message = "ups %d alerts present: " % len(info)
        for line in info:
            if line[1]:
                error_id = line[1].split(".")
                message += "%s " % ups_alert_status[error_id[-1]]
                state = 2 
    else:
        message = "no alerts present."    

    if message or state:
        yield state, message

check_info['ups_alert'] = {
  "inventory_function"  : inventory_ups_alert,
  "check_function"      : check_ups_alert,
  "service_description" : "Alerts",
  "has_perfdata"        : False,
  "group"               : "ups_alert",
  "snmp_info"           : ( ".1.3.6.1.2.1.33.1.6", [ 
                                                   "2.1.1", #index
                                                   "2.1.2" #desc (OID)
  ] ),
  "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in \
                         [ ".1.3.6.1.4.1.534.1", ".1.3.6.1.4.1.705.1", ".1.3.6.1.4.1.818.1.100.1.1",
                           ".1.3.6.1.2.1.33", ".1.3.6.1.4.1.705.1.2", ".1.3.6.1.2.1.33.2", ".1.3.6.1.4.1.5491.6",
                           ".1.3.6.1.4.1.476.1.42", ".1.3.6.1.4.1.818.1.100.1.2" ]
}
